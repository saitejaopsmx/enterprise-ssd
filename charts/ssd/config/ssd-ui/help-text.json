{
"INTEGRATOR_LISTING": {
    "HEADER": "No Integrator found!",
    "BODY": "<div><p>ISD offers integration with many CI/CD Tools. Integrations are grouped under the following categories - Artifact, CI, Governance, Monitoring Tools, Notifications, Policy and SAST/DAST.</p> <p>Integrations are used to</p> <ul><li>pull logs & metrics for Continuous Verification</li><li>pull meta data from CI/CD Tools for Informed Approvals</li><li>enforce organizational policies at the time of creation or execution of a pipeline</li><li>configure Artifacts, Cloud Providers etc.</li><p>Click on the <b<New Integration</b> button to start integrating your tools </p></div>",
    "SYNC_SPINNAKER_ACCOUNTS": {
        "TOOLTIP": "Push Integration changes to Spinnaker",
        "VALIDATION_MESSAGE": ""
    }
},
"APPLICATION_LISTING": {
    "HEADER": "No applications were found to match your filter!",
    "BODY": "",
    "PLACEHOLDER": "You don't have access to this Page. Please contact your Administrator",
    "SYNC_SPINNAKER": {
        "TOOLTIP": "To be able to work on applications created in Spinnaker, you need to import them here",
        "VALIDATION_MESSAGE": ""
    },
    "SYNC_SPINNAKER_NOT_CONFIGURED": {
        "TOOLTIP": "Configure Spinnaker to Sync Spinnaker Applications from here",
        "VALIDATION_MESSAGE": ""
    },
    "SYNC_SPINNAKER_ERROR": {
        "TOOLTIP": "Could not fetch Spinnaker Details. Please contact Administrator",
        "VALIDATION_MESSAGE": ""
    },
    "DISABLE_CREATE_APPLICATION_BTN": {
        "TOOLTIP": "You do not have permission to create Application",
        "VALIDATION_MESSAGE": ""
    }
},
"CLUSTER_LISTING": {
    "HEADER": "No Cloud Targets found!",
    "BODY": "<div><p>This page lets you manage the clusters to which your applications are getting deployed.</p> <p>To add a new cluster, click on the New Account button. You can specify the name, environments and server/ip of the file related to the cluster.</p></div>"
},
"CLUSTER_CREATION": {
    "CREATE_HEADER": "Create Cluster",
    "UPDATE_HEADER": "Update Cluster",
    "BODY": "<p>This page lets you add/update the clusters to which your applications are getting deployed. You can specify the name, environments and server/ip of the file related to the cluster. </p>",
    "ACCOUNT_NAME": {
    "TOOLTIP": "Name of the account to operate on",
    "VALIDATION_MESSAGE": {
        "required": "Account name cannot be empty",
        "cannotContainSpace": "Account name cannot contain space",
        "noSpecialCharacters": "Allowed special character is '-'",
        "startingFromNumber": "Account Name cannot start with numbers"
    }
    },
    "SERVER_IP": "The public IP/Server address that is mentioned in the cluster config file"
},
"INTEGRATION": {
    "DOCKER": {
        "HEADER": "Docker Registry",
        "BODY": "<span><p><strong>Fields</strong>:</p><ul class='helpTextUl'><li><strong>Account Name</strong>: User-defined account name for your Docker registry access.</li><li><strong>Registry URL</strong>: The registry URL from which you want to pull and deploy images. <span class='noBr'> DockerHub example: https://hub.docker.com</span></li><li><strong>Email</strong>: Users docker registry email. If no value is specified, the default value of fake.email@spinnaker.io will be used.</li><li><strong>Repositories</strong>: An optional list of repositories to cache images from. If not provided, Spinnaker will try to read the list of accessible repositories from the registries _catalog endpoint. <span class='noBr'> Example: library/ubuntu (Public repositories are prefixed with library/)</span></li><li><strong>Group Membership</strong>: Select an authentication type that corresponds to the connection credential parameter.</li><li><strong>Connect to Spinnaker</strong>: Toggle on to propagate the change into the CD Tool.</li></ul></span>",
        "NAME": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "noSpecialCharacters": "Account Name cannot contain special characters other than -",
                "cannotContainSpace": "Account Name cannot contain space",
                "required": "Account Name cannot be empty",
                "startingFromNumber": "Account Name cannot start with numbers",
                "minlength": "Account Name should be more than 2 characters"
            }
        },
        "URL": {
            "TOOLTIP": "The registry URL from which you want to pull and deploy images. DockerHub example: https://hub.docker.com",
            "VALIDATION_MESSAGE": {
                "required": "Host URL cannot be empty",
                "invalidUrl": "Host URL is invalid"
            }
        },
        "EMAIL": {
            "TOOLTIP": "Users docker registry email. If no value is specified, the default value of fake.email@spinnaker.io will be used."
        },
        "REPOSITORIES": {
            "TOOLTIP": "An optional list of repositories to cache images from. If not provided, Spinnaker will try to read the list of accessible repositories from the registries _catalog endpoint. Example: library/ubuntu (Public repositories are prefixed with library/)"
        },
        "GROUPMEMBERSHIP": {
            "TOOLTIP": ""
        },
        "AUTHENTICATIONTYPE": {
            "TOOLTIP": "Select an authentication type that corresponds to the connection credential parameter.",
            "VALIDATION_MESSAGE": {}
        },
        "TOKEN": {
            "TOOLTIP": "The token of the Docker Registry user to authenticate as",
            "VALIDATION_MESSAGE": {
                "required": "Token cannot be empty"
            }
        },
        "USERNAME": {
            "TOOLTIP": "The username of the Docker Registry user to authenticate as",
            "VALIDATION_MESSAGE": {
                "noSpecialCharacters": "User Name cannot contain special characters other than - and _",
                "cannotContainSpace": "User Name cannot contain space",
                "required": "User Name cannot be empty",
                "startingFromNumber": "User Name cannot start with numbers"
            }
        },
        "PASSWORD": {
            "TOOLTIP": "The password of the Docker Registry user to authenticate as",
            "VALIDATION_MESSAGE": {
                "required": "Password cannot be empty"
            }
        },
        "HOSTURL": {
            "TOOLTIP": "Docker Registry Host URL",
            "VALIDATION_MESSAGE": {
                "required": "Host URL cannot be empty",
                "invalidUrl": "Host URL is invalid"
            }
        },
        "SPINNAKERTOGGLE": {
            "TOOLTIP": "Toggle on to propagate the change into the CD Tool.",
            "VALIDATION_MESSAGE": {}
        }
    },
    "QUAY": {
        "HEADER": "Docker Registry",
        "BODY": "<span><p><strong>Fields</strong>:</p><ul class='helpTextUl'><li><strong>Account Name</strong>: User-defined account name for your Docker registry access.</li><li><strong>Registry URL</strong>: The registry URL from which you want to pull and deploy images. <span class='noBr'> DockerHub example: https://hub.docker.com</span></li><li><strong>Email</strong>: Users docker registry email. If no value is specified, the default value of fake.email@spinnaker.io will be used.</li><li><strong>Repositories</strong>: An optional list of repositories to cache images from. If not provided, Spinnaker will try to read the list of accessible repositories from the registries _catalog endpoint. <span class='noBr'> Example: library/ubuntu (Public repositories are prefixed with library/)</span></li><li><strong>Group Membership</strong>: Select an authentication type that corresponds to the connection credential parameter.</li><li><strong>Connect to Spinnaker</strong>: Toggle on to propagate the change into the CD Tool.</li></ul></span>",
        "NAME": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "noSpecialCharacters": "Account Name cannot contain special characters other than -",
                "cannotContainSpace": "Account Name cannot contain space",
                "required": "Account Name cannot be empty",
                "startingFromNumber": "Account Name cannot start with numbers",
                "minlength": "Account Name should be more than 2 characters"
            }
        },
        "URL": {
            "TOOLTIP": "The registry URL from which you want to pull and deploy images. DockerHub example: https://hub.docker.com",
            "VALIDATION_MESSAGE": {
                "required": "Host URL cannot be empty",
                "invalidUrl": "Host URL is invalid"
            }
        }
    },
    "ECR": {
        "HEADER": "ECR",
        "NAME": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "noSpecialCharacters": "Account Name cannot contain special characters other than -",
                "cannotContainSpace": "Account Name cannot contain space",
                "required": "Account Name cannot be empty",
                "startingFromNumber": "Account Name cannot start with numbers",
                "minlength": "Account Name should be more than 2 characters"
            }
        },
        "URL": {
            "VALIDATION_MESSAGE": {
                "required": "Host URL cannot be empty",
                "invalidUrl": "Host URL is invalid"
            }
        }
    },
    "BITBUCKET":{
        "HEADER": "Bitbucket",
        "NAME":{
          "TOOLTIP":"User-defined account name for your BitBucket access.",
          "VALIDATION_MESSAGE":{
            "noSpecialCharacters": "Account Name cannot contain special characters other than -",
            "cannotContainSpace":"Account Name cannot contain space",
            "required":"Account Name cannot be empty",
            "startingFromNumber": "Account Name cannot start with numbers"
          }
        },
        "ACCESSLEVELNAME":{
            "TOOLTIP":"",
            "VALIDATION_MESSAGE":{
              "required":"Name cannot be empty",
              "noSpecialCharacters": "Name cannot contain special characters other than -,/,@,.",
              "cannotContainSpace":"Name cannot contain space"
            }
        },
        "HOSTURL":{
          "TOOLTIP":"BitBucket Web URL. It is usually https://bitbucket.org",
          "VALIDATION_MESSAGE":{
            "required":"Host URL cannot be empty",
            "invalidUrl": "Host URL is invalid"
          }
        },
        "APIURL":{
          "TOOLTIP":"",
          "VALIDATION_MESSAGE":{
            "required":"API URL cannot be empty",
            "invalidUrl": "API URL is invalid"
          }
        }
    },
    "GITHUB": {
        "HEADER": "GitHub",
        "BODY": "<span><p>GITHUB integration can be used as a datasource for Approval Gate as well as to configure Spinnaker for GitHub.</p><p><strong>Fields</strong>:</p><ul class='helpTextUl'><li><strong>Account Name</strong>: User-defined account name for your GitHub access.<span class='noBr'>(Example: opsmx-github)</span></li><li><strong>URL</strong>: Github's host address, such as https://github.com</li><li><strong>API URL</strong>: Github's API endpoint host address, <span class='noBr'>such as https://api.github.com</span></li><li><strong>Token</strong>: GitHub personal access token. You can find <a href='https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token' target='_blank'>here</a> how to generate personal access tokens. <span class='noBr'>(Example: ghp_ln1eJK4yuomnY6JREp72IDJC4Hq6Sm)</span></li><li><strong>User Name</strong>: The GitHub username</li><li><strong>Connect to Spinnaker</strong>: Toggle to configure Spinnaker for GitHub</li><li><strong>Permissions</strong>: Enable/disable access to the GITHUB account in Autopilot to specific user groups</li></ul></span>",
        "NAME": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "noSpecialCharacters": "Account Name cannot contain special characters other than -",
                "cannotContainSpace": "Account Name cannot contain space",
                "required": "Account Name cannot be empty",
                "startingFromNumber": "Account Name cannot start with numbers"
            }
        },
        "URL": {
            "TOOLTIP": "Github's host address, such as https://github.com",
            "VALIDATION_MESSAGE": {
                "required": "API URL cannot be empty",
                "invalidUrl": "API URL is invalid"
            }
        },
        "TOKEN": {
            "TOOLTIP": "The user's token",
            "VALIDATION_MESSAGE": {
                "required": "Token cannot be empty"
            }
        },
        "USERNAME": {
            "TOOLTIP": "The GitHub username",
            "VALIDATION_MESSAGE": {
                "noSpecialCharacters": "User Name cannot contain special characters other than - and _",
                "cannotContainSpace": "User Name cannot contain space",
                "required": "User Name cannot be empty",
                "startingFromNumber": "User Name cannot start with numbers"
            }
        },
        "SPINNAKERTOGGLE": {
            "TOOLTIP": "Switch On this toggle to configure the resource in a gitops enabled Spinnaker instance",
            "VALIDATION_MESSAGE": {}
        }
    },
    "GITLAB": {
        "HEADER": "GitLab",
        "BODY": "<span><li><strong>Account Name</strong>: User-defined account name for your GitLab access.</li><li><strong>Host URL</strong>: GitLab's host address, such as https://gitlab.com</li><li><strong>Username</strong>: The GitLab server username </li><li><strong>Token</strong>: The user's personal access token. Please refer <a href='https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html' target='_blank'>this document</a> for generating tokens.</li></span>",
        "NAME": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "noSpecialCharacters": "Account Name cannot contain special characters other than -",
                "cannotContainSpace": "Account Name cannot contain space",
                "required": "Account Name cannot be empty",
                "startingFromNumber": "Account Name cannot start with numbers"
            }
        },
        "HOSTURL": {
            "TOOLTIP": "GitLab's host address, such as https://gitlab.com",
            "VALIDATION_MESSAGE": {
                "required": "Host URL cannot be empty",
                "invalidUrl": "Host URL is invalid"
            }
        },
        "URL": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "required": "API URL cannot be empty",
                "invalidUrl": "API URL is invalid"
            }
        },
        "AUTHENTICATIONTYPE": {
            "TOOLTIP": "Select how the external resource confirms the user credentials",
            "VALIDATION_MESSAGE": {}
        },
        "TOKEN": {
            "TOOLTIP": "GitLab token",
            "VALIDATION_MESSAGE": {
                "required": "Token cannot be empty"
            }
        },
        "SPINNAKERTOGGLE": {
            "TOOLTIP": "Switch On this toggle to configure the resource in a gitops enabled Spinnaker instance",
            "VALIDATION_MESSAGE": {}
        }
    },
    "JENKINS": {
        "HEADER": "Jenkins",
        "BODY": "<span><p>Jenkins integration can be used as a datasource for Approval Gate as well as to configure Spinnaker for Jenkins.</p><p><strong>Fields</strong>:</p><ul class='helpTextUl'><li><strong>Account Name</strong>: User-defined account name for your Jenkins access. <span class='noBr'>(Example: opsmx-jenkins)</span></li><li><strong>Host URL</strong>: Jenkins host address, <span class='noBr'>such as https://jenkins.opsmx.net</span></li><li><strong>Authentication Type</strong>: Select an authentication type that corresponds to the connection credential parameter. It is preferable to use token authentication with username and token. </li><li><strong>Token</strong>: Jenkins personal access token. You can find <a href='https://www.jenkins.io/doc/book/using/using-credentials/' target='_blank'>here</a> how to generate personal access tokens. <span>(Example: 77d67609a841b1811a114b7fbfa109b3c2)</span></li><li><strong>CSRF</strong>: Recommended to toggle on the CSRF (Cross-Site Request Forgery) flag</li><li><strong>User Name</strong>: Jenkins User Name</li><li><strong>Password</strong>: Jenkins Password</li><li><strong>Connect to Spinnaker</strong>: Toggle to configure Spinnaker for Jenkins</li><li><strong>Permissions</strong>: Enable/disable access to the Jenkins account in Autopilot to specific user groups</li></ul></span>",
        "NAME": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "noSpecialCharacters": "Account Name cannot contain special characters other than -",
                "cannotContainSpace": "Account Name cannot contain space",
                "required": "Account Name cannot be empty",
                "startingFromNumber": "Account Name cannot start with numbers",
                "minlength": "Account Name should be more than 2 characters"
            }
        },
        "URL": {
            "TOOLTIP": "Jenkins host address, such as https://jenkins.opsmx.net",
            "VALIDATION_MESSAGE": {
                "required": "Host URL cannot be empty",
                "invalidUrl": "Host URL is invalid"
            }
        },
        "CSRFFLAG": {
            "TOOLTIP": "Recommended to toggle on the CSRF (Cross-Site Request Forgery) flag."
        },
        "AUTHENTICATIONTYPE": {
            "TOOLTIP": "Select an authentication type that corresponds to the connection credential parameter. It is preferable to use token authentication with username and token.",
            "VALIDATION_MESSAGE": {}
        },
        "TOKEN": {
            "TOOLTIP": "Your Jenkins token",
            "VALIDATION_MESSAGE": {
                "required": "Token cannot be empty"
            }
        },
        "USERNAME": {
            "TOOLTIP": "Your Jenkins username",
            "VALIDATION_MESSAGE": {
                "noSpecialCharacters": "User Name cannot contain special characters other than - and _",
                "cannotContainSpace": "User Name cannot contain space",
                "required": "User Name cannot be empty",
                "startingFromNumber": "User Name cannot start with numbers"
            }
        },
        "PASSWORD": {
            "TOOLTIP": "Your Jenkins password",
            "VALIDATION_MESSAGE": {
                "required": "Password cannot be empty"
            }
        },
        "SPINNAKERTOGGLE": {
            "TOOLTIP": "Switch On this toggle to configure the resource in a gitops enabled Spinnaker instance",
            "VALIDATION_MESSAGE": {}
        }
    },
    "HARBOR": {
        "HEADER": "HARBOR",
        "BODY": "",
        "NAME": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "noSpecialCharacters": "Account Name cannot contain special characters other than -",
                "cannotContainSpace": "Account Name cannot contain space",
                "required": "Account Name cannot be empty",
                "startingFromNumber": "Account Name cannot start with numbers",
                "minlength": "Account Name should be more than 2 characters"
            }
        }
    },
    "GOOGLE-ARTIFACT-REGISTRY": {
        "HEADER": "Google Artifact Registry",
        "BODY": "",
        "NAME": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "noSpecialCharacters": "Account Name cannot contain special characters other than -",
                "cannotContainSpace": "Account Name cannot contain space",
                "required": "Account Name cannot be empty",
                "startingFromNumber": "Account Name cannot start with numbers",
                "minlength": "Account Name should be more than 2 characters"
            }
        },
        "KEY": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "cannotContainSpace": "Key cannot contain space",
                "required": "Key cannot be empty",
                "minlength": "Key should be more than 2 characters"
            }
        }
    },
    "SLACK": {
        "HEADER": "Slack",
        "BODY": "<span><li><strong>Account Name</strong>: User-defined account name for your Slack access.</li><li><strong>BotName</strong>: Provide the bot name where you want to receive notifications in slack</li><li><strong>Token</strong>: The user's token to authenticate with slack.</li></span>",
        "NAME": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "noSpecialCharacters": "Account Name cannot contain special characters other than -",
                "cannotContainSpace": "Account Name cannot contain space",
                "required": "Account Name cannot be empty",
                "startingFromNumber": "Account Name cannot start with numbers"
            }
        },
        "CHANNEL": {
            "TOOLTIP": "Slack Bot Name",
            "VALIDATION_MESSAGE": {
                "cannotContainSpace": "Channel cannot contain space",
                "required": "Channel cannot be empty",
                "startingFromNumber": "Channel cannot start with numbers",
                "minlength": "Channel should be more than 2 characters"
            }
        }
    },
    "CUSTOMPOLICY": {
        "HEADER": "Slack",
        "BODY": "<span><li><strong>Account Name</strong>: User-defined account name for your Slack access.</li><li><strong>BotName</strong>: Provide the bot name where you want to receive notifications in slack</li><li><strong>Token</strong>: The user's token to authenticate with slack.</li></span>",
        "NAME": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "noSpecialCharacters": "Account Name cannot contain special characters other than -",
                "cannotContainSpace": "Account Name cannot contain space",
                "required": "Account Name cannot be empty",
                "startingFromNumber": "Account Name cannot start with numbers"
            }
        },
        "URL": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "required": "Repo URL cannot be empty",
                "invalidUrl": "REpo URL is invalid"
            }
        }
    },
    "JFROG": {
        "HEADER": "JFrog XRay Scanning",
        "BODY": "<span><li><strong>Account Name</strong>: User-defined account name for your Jfrog Xray access.</li><li><strong>Endpoint</strong>: Your Jfrog Xray host address, from which you access the Jfrog Xray instance</li><li><strong>Token</strong>: The user's token.</li></span>",
        "NAME": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "noSpecialCharacters": "Account Name cannot contain special characters other than -",
                "cannotContainSpace": "Account Name cannot contain space",
                "required": "Account Name cannot be empty",
                "startingFromNumber": "Account Name cannot start with numbers",
                "minlength": "Account Name should be more than 2 characters"
            }
        },
        "URL": {
            "TOOLTIP": "Jfrog Xray host address, from which you access the Jfrog Xray instance",
            "VALIDATION_MESSAGE": {
                "required": "Host URL cannot be empty",
                "invalidUrl": "Host URL is invalid"
            }
        },
        "TOKEN": {
            "TOOLTIP": "The user's token from jfrog xray to authenticate",
            "VALIDATION_MESSAGE": {
                "required": "Token cannot be empty"
            }
        }
    },
    "KUBERNETES": {
        "HEADER": "",
        "BODY": "",
        "NAME": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "noSpecialCharacters": "Account Name cannot contain special characters other than -",
                "cannotContainSpace": "Account Name cannot contain space",
                "required": "Account Name cannot be empty",
                "startingFromNumber": "Account Name cannot start with numbers",
                "minlength": "Account Name should be more than 2 characters"
            }
        },
        "CLUSTERNAME": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "noSpecialCharacters": "Cluster Name cannot contain special characters other than -",
                "required": "Cluster name cannot be empty",
                "invalidUrl": "Cluster name is invalid",
                "minlength": "Cluster Name should be more than 2 characters"
            }
        },
        "TOKEN": {
            "TOOLTIP": "The user's token from jfrog xray to authenticate",
            "VALIDATION_MESSAGE": {
                "required": "Token cannot be empty"
            }
        }
    },
    "ARGO": {
        "HEADER": "",
        "BODY": "",
        "NAME": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "noSpecialCharacters": "Account Name cannot contain special characters other than -",
                "cannotContainSpace": "Account Name cannot contain space",
                "required": "Account Name cannot be empty",
                "startingFromNumber": "Account Name cannot start with numbers",
                "minlength": "Account Name should be more than 2 characters"
            }
        },
        "URL": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "required": "Argo URL cannot be empty",
                "invalidUrl": "Argo URL is invalid"
            }
        },
        "TOKEN": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "required": "Token cannot be empty"
            }
        }
    },
    "SPINNAKER": {
        "HEADER": "",
        "BODY": "",
        "NAME": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "noSpecialCharacters": "Account Name cannot contain special characters other than -",
                "cannotContainSpace": "Account Name cannot contain space",
                "required": "Account Name cannot be empty",
                "startingFromNumber": "Account Name cannot start with numbers",
                "minlength": "Account Name should be more than 2 characters"
            }
        },
        "URL": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "required": "Host URL cannot be empty",
                "invalidUrl": "Host URL is invalid"
            }
        },
        "TOKEN": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "required": "Token cannot be empty"
            }
        }
    },
    "SNYK": {
        "HEADER": "",
        "BODY": "",
        "NAME": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "noSpecialCharacters": "Account Name cannot contain special characters other than -",
                "cannotContainSpace": "Account Name cannot contain space",
                "required": "Account Name cannot be empty",
                "startingFromNumber": "Account Name cannot start with numbers",
                "minlength": "Account Name should be more than 2 characters"
            }
        },
        "URL": {
            "TOOLTIP": "Jfrog Xray host address, from which you access the Jfrog Xray instance",
            "VALIDATION_MESSAGE": {
                "required": "Host URL cannot be empty",
                "invalidUrl": "Host URL is invalid"
            }
        },
        "TOKEN": {
            "TOOLTIP": "The user's token from jfrog xray to authenticate",
            "VALIDATION_MESSAGE": {
                "required": "Token cannot be empty",
                "minlength": "Token should be more than 2 characters"
            }
        }
    },
    "JIRA":{
        "HEADER": "Jira",
        "BODY":"",
        "NAME":{
          "TOOLTIP":"User defined name for the Jira account",
          "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
        },
        "EMAIL":{
          "TOOLTIP":"Jira Email Id",
          "VALIDATION_MESSAGE":{
            "email":"Email Id is invalid",
            "required":"Email Id cannot be empty"
          }
        },
        "TOKEN":{
          "TOOLTIP":"Jira Personal Access Token",
          "VALIDATION_MESSAGE":{
            "required":"Token cannot be empty"
          }
        },
        "HOSTURL":{
          "TOOLTIP":"Jira Host URL",
          "VALIDATION_MESSAGE":{
            "required":"Host URL cannot be empty",
            "invalidUrl": "Host URL is invalid"
          }
        }
      },
    "SONARQUBE": {
        "HEADER": "SonarQube",
        "BODY": "<span><li><strong>Account Name</strong>: User-defined account name for your Sonarqube access. </li><li><strong>Host Url</strong>: Sonarqube host address, from which you access the Sonaqube instance</li><li><strong>Token</strong>: The user's token (it is optional)</li></span>",
        "NAME": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "noSpecialCharacters": "Account Name cannot contain special characters other than -",
                "cannotContainSpace": "Account Name cannot contain space",
                "required": "Account Name cannot be empty",
                "startingFromNumber": "Account Name cannot start with numbers"
            }
        },
        "URL": {
            "TOOLTIP": "Sonarqube host address, from which you access the Sonaqube instance",
            "VALIDATION_MESSAGE": {
                "required": "URL cannot be empty",
                "invalidUrl": "URL is invalid"
            }
        },
        "TOKEN": {
            "TOOLTIP": "The user's token (it is optional)",
            "VALIDATION_MESSAGE": {
                "required": "Token cannot be empty"
            }
        }
    },
    "AUTOPILOT": {
        "HEADER": "Autopilot",
        "BODY": "",
        "NAME": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "noSpecialCharacters": "Account Name cannot contain special characters other than -",
                "cannotContainSpace": "Account Name cannot contain space",
                "required": "Account Name cannot be empty",
                "startingFromNumber": "Account Name cannot start with numbers"
            }
        },
        "USERNAME": {
            "TOOLTIP": " Autopilot User Name",
            "VALIDATION_MESSAGE": {
                "noSpecialCharacters": "User Name cannot contain special characters other than - and _",
                "cannotContainSpace": "User Name cannot contain space",
                "required": "User Name cannot be empty",
                "startingFromNumber": "User Name cannot start with numbers"
            }
        }
    }
},
"UNCHANGED_FORM": "Form is unchanged. Please make modifications in the form to enable the button.",
"INVALID_FORM": "Few fields are mandatory or invalid. Please fill the form to enable the button.",
"NO_WRITE_ACCESS": "You have only read permission. Please check with your administrator for updating permissions.",
"ACCESS_MANAGEMENT": {
    "ADMINISTRATOR": {
        "INFO": "Super Administrator Groups will not appear in the dropdown since their Access Permissions cannot be modified. Administrators will have full Access to all Resources.",
        "TOOLTIP": "Groups with Administration Permissions"
    },
    "USER_ROLE_LISTING": {
        "HEADER": "ROLE MANAGEMENT",
        "BODY": "Users should be assigned user roles only if they need global access to one or more resources."
    },
    "USER_ROLE_CREATION": {
        "ROLENAME": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "required": "Role Name cannot be empty",
                "cannotContainSpace": "Role Name cannot contain space",
                "noSpecialCharacters": "Role Name cannot contain special character",
                "startingFromNumber": "Role Name should not start with number"
            }
        },
        "USER_GROUPS": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "required": "Groups cannot be empty"
            }
        },
        "PERMISSIONS": {
            "VALIDATION_MESSAGE": {
                "required": "Atleast one feature has to be enabled with permissions"
            }
        }
    },
    "FEATURE_VISIBILTY_LISTING": {
        "HEADER": "FEATURE FLAG MANAGEMENT",
        "BODY": "Feature Visibility is used for scenarios where one or more user groups need exclusive access to a specific feature. For example, the 'Compliance Team' should only access the Policy Management feature. Administrators can enable the feature flag for the compliance team user group. The feature visibility function will ensure that the policy management feature is not visible for all other user groups."
    },
    "FEATURE_VISIBILTY_CREATION": {
        "ROLENAME": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "required": "Role Name cannot be empty",
                "cannotContainSpace": "Role Name cannot contain space",
                "noSpecialCharacters": "Role Name cannot contain special character",
                "startingFromNumber": "Role Name should not start with number"
            }
        },
        "USER_GROUPS": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
                "required": "Groups cannot be empty"
            }
        },
        "PERMISSIONS": {
            "VALIDATION_MESSAGE": {
                "required": "Atleast one feature has to be enabled"
            }
        }
    }
}
}

