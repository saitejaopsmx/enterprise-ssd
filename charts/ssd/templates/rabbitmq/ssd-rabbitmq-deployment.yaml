apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ssd
    component: ssd-rabbitmq
{{ include "ssd.standard-labels" . | indent 4 }}
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ssd
      component: ssd-rabbitmq
  template:
    metadata:
      annotations:
{{- if .Values.rabbitmq.annotations -}}
{{ toYaml .Values.rabbitmq.annotations | nindent 8 }}
{{- end }}
      labels:
        app: ssd
        component: ssd-rabbitmq
{{ include "ssd.standard-labels" . | indent 8 }}
    spec:
      containers:
      - image: {{ .Values.rabbitmq.image.registry }}:{{ .Values.rabbitmq.image.repository }}
        imagePullPolicy: IfNotPresent
        name: rabbitmq
        env:
       {{- if .Values.extraEnvVars }}
       {{- include "tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 8 }}
       {{- end }}
        envFrom:
        - configMapRef:
            name: ssd-proxy-certs
            optional: true
        ports:
        - containerPort: {{ .Values.rabbitmq.port }}
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /usr/local/share/ca-certificates
          name: custom-certs
      {{- if .Values.imagePullSecret}}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecret}}
      {{- end }}
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: ssd-proxy-certs
        configMap:
          defaultMode: 420
          optional: true
          name: ssd-proxy-certs
      - name: custom-certs  # Optional: In case we are using any customer-specific custom CAs
        configMap:
          defaultMode: 420
          items:
          - key: ca.crt
            path: ca.crt
          optional: true
          name: customer-custon-ca
