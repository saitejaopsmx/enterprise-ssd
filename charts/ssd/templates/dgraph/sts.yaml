apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: ssd
    component: dgraph
{{ include "ssd.standard-labels" . | indent 4 }}
  name: dgraph
spec:
  serviceName: "dgraph"
  replicas: 1
  selector:
      matchLabels:
        app: ssd
        component: dgraph
  template:
    metadata:
      labels:
        app: ssd
        component: dgraph
{{- if .Values.customLabels }}
{{ toYaml .Values.customLabels | indent 8}}
{{- end }}
      annotations:
{{- if .Values.dgraph.annotations -}}
        {{ toYaml .Values.dgraph.annotations | nindent 8 }}
{{- end }}
    spec:
      containers:
      - name: ratel
        image: {{ template "ratel.image" . }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http-ratel
      - name: zero
        image: {{ template "dgraph.image" . }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5080
          name: grpc-zero
        - containerPort: 6080
          name: http-zero
        volumeMounts:
        - name: datadir
          mountPath: /dgraph
        command:
          - bash
          - "-c"
          - |
            set -ex
            dgraph zero --my=$(hostname -f):5080
      - name: alpha
        image: {{ template "dgraph.image" . }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http-alpha
        - containerPort: 9080
          name: grpc-alpha
        volumeMounts:
        - name: datadir
          mountPath: /dgraph
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        command:
          - bash
          - "-c"
          - |
            set -ex
            dgraph alpha --my=$(hostname -f):7080 --zero dgraph-0.dgraph.${POD_NAMESPACE}.svc.cluster.local:5080 --security "whitelist=0.0.0.0/0"
      terminationGracePeriodSeconds: 60
      volumes:
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- if .Values.noPvc }}
      volumes:
      - name: datadir
        emptyDir: {}
{{- else }}
  volumeClaimTemplates:
  - metadata:
      name: datadir
      annotations:
        volume.alpha.kubernetes.io/storage-class: anything
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: 5Gi
{{- end }}
