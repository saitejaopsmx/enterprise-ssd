# Backend services to route the calls to. Routes are processed in the order provided here
# All routed configured can be viewed in the browser at the /showroutes endpoint
# The 3 routes below are optional, they are filled in automatically if nothing is specified
# OPTIONAL default backends are programmed in. If specified ALL backends including these MUST be included
# All Options for backend
  #auth_required: true # Default FALSE!! i.e no login/authentication is required for this backend
  #strip_prefix: false # If true, the path_prefix is removed before sending to backend. Best is to use only ONE path_prefix
  #log_traffic: true   # Useful for debugging. This will cause traffic to be logged. NOTE: This MAY expose secrets and should not be used in production
  #disabled: false     # If true, the backend is temporarily disabled, only for debugging/dev. In prod, best to remove the service altogether
  #scheme: http        # If the Backend is httpS, please set it https
  #streaming: false    # If we have a streaming backend e.g. a service that returns results of a DB-query, set this to true(there is a resource hit)

- name: supplychain-api-unauth   # Unauthenticated end-point for web-hook posts, we could add JWT to make it authenticated
  path_prefixes:
  - "/ssdservice/v1/spinnakerevents"
  - "/ssdservice/v1/setup"
  - "/ssdservice/v1/ssd-kubernetes-info"
  - "/ssdservice/v1/events"
  - "/ssdservice/v1/opa-firewall"
  - "/ssdservice/v1/kubescapeIntegration"
  baseUrl: supplychain-api:8099
  health_endpoint: /health
  log_traffic: true
- name: ssd-opa-unauth   # Unauthenticated end-point for web-hook posts, we could add JWT to make it authenticated
  path_prefixes:
  - "/webhook/api/v1/dataCollection"   # Need code-change from Shradha?
  - "/webhook/api/v1/bundle.tar.gz"    # Can be made JWT Authenticated
  - "/webhook/logs/api/v1/deploymentFirewallDecisionLogs" # Can be made JWT authenticated
  - "/webhook/api/v1/opaPermission"
  - "/webhook/api/v1/kubescape"
  strip_path: "/webhook"  # Remove /webhook before sending to ssd-opa
  baseUrl: ssd-opa:8200
  health_endpoint: /health
  log_traffic: true
- name: supplychain-api  # Name
  path_prefixes:
  - "/ssdservice"        # incoming calls are routed based on this. Processed in Order i.e. we can have multiple of these going to the same backend
  baseUrl: supplychain-api:8099
  auth_required: true # Default false. Note that if the backend does not need auth i.e it will not get the user who requested this
  health_endpoint: /healthz
  log_traffic: true
- name: rabbitmq
  path_prefixes:
  - "/rabbit"
  baseUrl: rabbitmq-service:15672
  health_endpoint: /
  strip_prefix: true
- name: ssd-opa
  path_prefixes:
  - "/ssd-opa"
  baseUrl: ssd-opa:8200
  health_endpoint: /health
  strip_prefix: true
  log_traffic: true
  auth_required: true
- name: supplychain-preprocessor
  baseUrl: supplychain-preprocessor:8058
  health_endpoint: /healthz
  auth_required: true
- name: tool-chain
  baseUrl: tool-chain:8100
  health_endpoint: /
  auth_required: true
  path_prefixes:
  - "/tool-chain"
  log_traffic: true
  streaming: false
  strip_path: "/tool-chain"
- name: dgraph
  baseUrl: dgraph-public:8080
  health_endpoint: /
  auth_required: true
  path_prefixes:
  - "/graphql"
  log_traffic: true
  streaming: false
- name: ssd-ui
  baseUrl: ssd-ui:8080
  health_endpoint: "/ui/index.html"
  auth_required: true
- name: ssd-minio
  baseUrl: ssd-minio:9000
  health_endpoint: ""
  auth_required: true
{{- if .Values.ssdgate.installDex }}
- name: ssd-dex
  baseUrl: ssd-dex:5558
  health_endpoint: /healthz/ready
{{- end }}
