apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ssd
    component: ui
{{ include "ssd.standard-labels" . | indent 4 }}
  name: ssd-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ssd
      component: ui
  template:
    metadata:
      annotations:
        checksum/configmap: {{ (.Files.Glob "config/ssd-ui/app-config.json").AsConfig | sha256sum }}
{{- if .Values.ui.annotations -}}
        {{ toYaml .Values.ui.annotations | nindent 8 }}
{{- end }}
      labels:
        app: ssd
        component: ui
{{- if .Values.customLabels }}
{{ toYaml .Values.customLabels | indent 8}}
{{- end }}
    spec:
      containers:
      - image: {{ template "ui.image" . }}
        name: ssd-ui
        env:
       {{- if .Values.extraEnvVars }}
       {{- include "tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 8 }}
       {{- end }}
        envFrom:
        - configMapRef:
            name: ssd-proxy-certs
            optional: true
        ports:
        - containerPort: 8080
          protocol: TCP
        volumeMounts:
        - name: config-dir
          mountPath: /var/www/html/ui/assets/config/app-config.json
          subPath: app-config.json
        - name: config-dir
          mountPath: /var/www/html/ui/assets/config/help-text.json
          subPath: help-text.json
        - name: config-dir
          mountPath: /var/www/html/ui/assets/config/integrators-config.json
          subPath: integrators-config.json
        - mountPath: /etc/nginx/nginx.conf
          name: nginx-config
          subPath: nginx.conf
        - mountPath: /usr/local/share/ca-certificates
          name: custom-certs
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /ui/indexl.html
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 5
        securityContext:
      {{- if .Values.ui.securityContext }}
      {{ toYaml .Values.ui.securityContext | nindent 10 }}
      {{- else }}
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          seccompProfile:
            type: RuntimeDefault
      {{- end }}
      {{- if .Values.imagePullSecret}}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecret}}
      {{- end }}
      {{- if .Values.global.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.global.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.global.affinity }}
      affinity:
{{ toYaml .Values.global.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.global.tolerations }}
      tolerations:
{{ toYaml .Values.global.tolerations | indent 8 }}
      {{- end }}
      volumes:
      - configMap:
          defaultMode: 420
          name: ssd-ui-config
        name: config-dir
      - name: custom-certs  # Optional: In case we are using any customer-specific custom CAs
        configMap:
          defaultMode: 420
          items:
          - key: ca.crt
            path: ca.crt
          optional: true
          name: customer-custon-ca
      - configMap:
          defaultMode: 420
          name: ssd-ui-nginxconf
        name: nginx-config
      - name: ssd-proxy-certs
        configMap:
          defaultMode: 420
          optional: true
          name: ssd-proxy-certs
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
